/*******************************************************************************
 * Copyright (c) 2009, 2011 The University of Memphis.  All rights reserved. 
 * This program and the accompanying materials are made available 
 * under the terms of the LIDA Software Framework Non-Commercial License v1.0 
 * which accompanies this distribution, and is available at
 * http://ccrg.cs.memphis.edu/assets/papers/2010/LIDA-framework-non-commercial-v1.0.pdf
 *******************************************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LogPanel.java
 *
 * Created on 12/07/2009, 09:42:13
 */
package edu.memphis.ccrg.lida.framework.gui.panels;

import java.util.logging.Formatter;
import java.util.logging.Handler;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

import javax.swing.JPanel;

import edu.memphis.ccrg.lida.framework.Lida;
import java.util.logging.Level;

/**
 *
 * @author Javier Snaider
 */
public class LogPanel extends LidaPanelImpl {

	private static final long serialVersionUID = 12L;

    private String logName = "lida"; 
    private Logger logger = Logger.getLogger(logName);
    private String level="INFO";
    /** Creates new form LogPanel */
    public LogPanel() {

        initComponents();
        logger.addHandler(new GuiLogHandler()); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        loggingText = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        levelComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        loggerComboBox = new javax.swing.JComboBox();

        setLayout(new java.awt.BorderLayout());

        loggingText.setColumns(20);
        loggingText.setRows(5);
        jScrollPane1.setViewportView(loggingText);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 60));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Logging level");

        clearButton.setText("Clear log");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        levelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SEVERE", "WRNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL", "OFF" }));
        levelComboBox.setSelectedItem("INFO");
        levelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Logger:");

        loggerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SEVERE", "WRNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL", "OFF" }));
        loggerComboBox.setSelectedItem("INFO");
        loggerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loggerComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(clearButton)
                .addGap(123, 123, 123))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(clearButton)
                    .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(loggerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        loggingText.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void levelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelComboBoxActionPerformed
        Level level=Level.parse(levelComboBox.getSelectedItem().toString());

        Logger.getLogger("").setLevel(level);
    }//GEN-LAST:event_levelComboBoxActionPerformed

    private void loggerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loggerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loggerComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox levelComboBox;
    private javax.swing.JComboBox loggerComboBox;
    private javax.swing.JTextArea loggingText;
    // End of variables declaration//GEN-END:variables
    

    public void display(Object o) {
        if (o instanceof String) {
            String s = (String) o;
            loggingText.append(s);
        }
    }

    /**
     * @return the level
     */
    public String getLevel() {
        return level;
    }

    /**
     * @param level the level to set
     */
    public void setLevel(String level) {
        this.level = level;
    }

    public class GuiLogHandler extends Handler {
        String logMessages = new String("");
        java.text.DateFormat df = java.text.DateFormat.getDateTimeInstance();
        
        /** Creates a new instance of GuiLogHandler */    
        public GuiLogHandler() {
        }

        public void publish(LogRecord logRecord){
        	Formatter f = getFormatter();
        	if(f == null){
        		f=new SimpleFormatter();
        	}
        	   	
//             logMessages = logRecord.getSequenceNumber() + " " + 
//                          dateString + " " + 
//                          logRecord.getLevel() + "\n" + 
//                          logRecord.getMessage() + "\n" +
//                          logRecord.getSourceClassName() + " " + 
//                          logRecord.getSourceMethodName() + "\n";
            loggingText.append(f.format(logRecord));
        }

        public void flush(){
        }
        
        public void close(){
            logMessages = null;
        }
    }

}
