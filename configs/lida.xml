<?xml version="1.0" encoding="UTF-8"?><!--
    Copyright (c) 2009, 2010 The University of Memphis.  All rights reserved. 
    This program and the accompanying materials are made available 
    under the terms of the LIDA Software Framework Non-Commercial License v1.0 
    which accompanies this distribution, and is available at
    http://ccrg.cs.memphis.edu/assets/papers/2010/LIDA-framework-non-commercial-v1.0.pdf
 -->

<lida xmlns="http://ccrg.cs.memphis.edu/LidaXMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://ccrg.cs.memphis.edu/LidaXMLSchema LidaXMLSchema.xsd ">
	<taskmanager>
		<param name="taskManager.tickDuration" type="int">1 </param>
		<param name="taskManager.maxNumberOfThreads" type="int"> 100</param>
	</taskmanager>	<submodules> 
		<module name="Environment">
			<class>edu.memphis.ccrg.lida.example.genericlida.main.VisionEnvironment</class>
			<param name="height" type="int"> 10 </param>
			<param name="width" type="int">10 </param>			<taskspawner>defaultTS</taskspawner>		</module>
		<module name="SensoryMemory">
			<class>edu.memphis.ccrg.lida.example.genericlida.main.VisualSensoryMemory</class>
			<associatedmodule>Environment</associatedmodule>			<taskspawner>defaultTS</taskspawner>			<initialTasks>			<task name="start">				<class>edu.memphis.ccrg.lida.sensorymemory.SMBackgroundTask</class>				<ticksperrun>5</ticksperrun>				<associatedmodule>SensoryMemory</associatedmodule>			</task>			</initialTasks>
		</module>
		<module name="SensoryMotorMemory">
			<class>edu.memphis.ccrg.lida.sensorymotormemory.SensoryMotorMemoryImpl</class>			<associatedmodule>Environment</associatedmodule>
			<taskspawner>defaultTS</taskspawner>		</module>
		<module name="PerceptualAssociativeMemory">
			<class>edu.memphis.ccrg.lida.pam.PerceptualAssociativeMemoryImpl</class>
			<param name="pam.Upscale" type="double">.7 </param>
			<param name="pam.Downscale" type="double">.6 </param>
			<param name="pam.Selectivity" type="double">.5 </param>
			<param name="pam.newNodeType" type="string">PamNodeImpl</param>
			<param name="pam.newLinkType" type="string">PamLinkImpl</param>
			<taskspawner>defaultTS</taskspawner>			<initializerclass>edu.memphis.ccrg.lida.example.framework.initialization.PamInitializer</initializerclass>
		</module>
		<module name="TransientEpisodicMemory">
			<class>edu.memphis.ccrg.lida.episodicmemory.TemImpl</class>
			<associatedmodule>PerceptualAssociativeMemory</associatedmodule>
			<param name="tem.numOfHardLoc" type="int">10000</param>			
			<param name="tem.addressLength" type="int">1000</param>			
			<param name="tem.wordLength" type="int">1000</param>			
			<param name="tem.activationRadious" type="int">451</param>			
			<taskspawner>defaultTS</taskspawner>		</module>
		<module name="DeclarativeMemory">
			<class>edu.memphis.ccrg.lida.episodicmemory.TemImpl</class>
			<param name="tem.numOfHardLoc" type="int">10000</param>			
			<param name="tem.addressLength" type="int">1000</param>			
			<param name="tem.wordLength" type="int">1000</param>			
			<param name="tem.activationRadious" type="int">451</param>						
			<taskspawner>defaultTS</taskspawner>		</module>
		<module name="Workspace">
			<class>edu.memphis.ccrg.lida.workspace.main.WorkspaceImpl</class>
			<submodules>
				<module name="EpisodicBuffer">
					<class>edu.memphis.ccrg.lida.workspace.workspaceBuffer.WorkspaceBufferImpl</class>
					<taskspawner>defaultTS</taskspawner>				</module>
				<module name="PerceptualBuffer">
					<class>edu.memphis.ccrg.lida.workspace.workspaceBuffer.WorkspaceBufferImpl</class>
					<taskspawner>defaultTS</taskspawner>				</module>
				<module name="CurrentSituationalModel">
					<class>edu.memphis.ccrg.lida.workspace.workspaceBuffer.WorkspaceBufferImpl</class>
					<taskspawner>defaultTS</taskspawner>				</module>
				<module name="BroadcastQueue">
					<class>edu.memphis.ccrg.lida.workspace.broadcastqueue.BroadcastQueueImpl</class>
					<param name="workspace.broadcastQueueCapacity" type="int">20 </param>
					<taskspawner>defaultTS</taskspawner>				</module>
			</submodules>			<param name="workspace.activationLowerBound" type="double">0.01</param>
			<taskspawner>defaultTS</taskspawner>			<!--  background tasks need to manage themselves.  the can check the module's state -->			<initialTasks>			<task name="background">				<class>edu.memphis.ccrg.lida.workspace.main.WSBackgroundTask</class>				<ticksperrun>9</ticksperrun>				<associatedmodule>Workspace</associatedmodule>				<param name="workspace.actThreshold"  type="double">0.4</param>				<param name="workspace.cueFrequency"  type="int">3</param>			</task>			</initialTasks>		</module>
		<module name="AttentionModule">			<class>edu.memphis.ccrg.lida.attention.AttentionModuleImpl</class>			<associatedmodule>Workspace</associatedmodule>			<associatedmodule>GlobalWorkspace</associatedmodule>			<taskspawner>defaultTS</taskspawner>			<initializerclass>edu.memphis.ccrg.lida.example.framework.initialization.AttentionModuleInitializer</initializerclass>		</module>		<module name="StructureBuildingCodeletModule">			<class>edu.memphis.ccrg.lida.workspace.structurebuildingcodelets.StructureBuildingCodeletModule</class>			<associatedmodule>Workspace</associatedmodule>			<taskspawner>defaultTS</taskspawner>		</module>		<module name="GlobalWorkspace">
			<class>edu.memphis.ccrg.lida.globalworkspace.GlobalWorkspaceImpl</class>
			<param name="globalWorkspace.delayNoBroadcast" type="int">100 </param>
			<param name="globalWorkspace.delayNoNewCoalition" type="int">50 </param>
			<param name="globalWorkspace.aggregateActivationThreshold" type="double">.8 </param>
			<param name="globalWorkspace.individualActivationThreshold" type="double">.5 </param>
			<taskspawner>defaultTS</taskspawner>			<initializerclass>edu.memphis.ccrg.lida.framework.initialization.GlobalWorkspaceInitalizer</initializerclass>
		</module> 
		<module name="ProceduralMemory">
			<class>edu.memphis.ccrg.lida.proceduralmemory.ProceduralMemoryImpl</class>
			<param name="proceduralMemory.ticksPerStep" type="int"> 14 </param>
			<taskspawner>defaultTS</taskspawner>			<initializerclass>edu.memphis.ccrg.lida.example.framework.initialization.ProceduralMemoryInitializer</initializerclass>
		</module>
		<module name="ActionSelection">
			<class>edu.memphis.ccrg.lida.actionselection.ActionSelectionImpl</class>
			<param name="actionSelection.ticksPerStep" type="int"> 10</param>
			<taskspawner>defaultTS</taskspawner>		</module> 
	</submodules>
	<taskspawners>	<taskspawner name="defaultTS">		<class>edu.memphis.ccrg.lida.framework.tasks.TaskSpawnerImpl</class>	</taskspawner>	</taskspawners><!--	<drivers>
		<driver name="SensoryMemoryDriver">
			<class>edu.memphis.ccrg.lida.sensorymemory.SensoryMemoryDriver</class>
			<associatedmodule>SensoryMemory</associatedmodule>
			<ticksperstep>5</ticksperstep>
		</driver>
		<driver name="PamDriver">
			<class>edu.memphis.ccrg.lida.pam.PamDriver</class>
			<associatedmodule>PerceptualAssociativeMemory</associatedmodule>
			<ticksperstep>10</ticksperstep>
		</driver>
		<driver name="AttentionDriver">
			<class>edu.memphis.ccrg.lida.attention.AttentionModuleImpl</class>
			<associatedmodule>Workspace</associatedmodule>
			<associatedmodule>GlobalWorkspace</associatedmodule>
			<ticksperstep>8</ticksperstep>
			<initializerclass>edu.memphis.ccrg.lida.example.framework.initialization.AttentionModuleInitializer</initializerclass>
		</driver>
		<driver name="StructureBuildingCodeletDriver">
			<class>edu.memphis.ccrg.lida.workspace.structurebuildingcodelets.StructureBuildingCodeletModule</class>
			<associatedmodule>Workspace</associatedmodule>
			<ticksperstep>5</ticksperstep>
		</driver>
		<driver name="ProceduralMemoryDriver">
			<class>edu.memphis.ccrg.lida.proceduralmemory.ProceduralMemoryDriver</class>
			<associatedmodule>ProceduralMemory</associatedmodule>
			<ticksperstep>5</ticksperstep>
		</driver>
		<driver name="WorkspaceDriver">
			<class>edu.memphis.ccrg.lida.workspace.main.WorkspaceDriver</class>
			<associatedmodule>Workspace</associatedmodule>
			<ticksperstep>9</ticksperstep>
			<param name="workspace.actThreshold"  type="double">0.4</param>
			<param name="workspace.cueLap"  type="int">3</param>
		</driver>
	</drivers>
-->	<listeners>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.sensorymotormemory.SensoryMotorMemoryListener</listenertype>
			<modulename>SensoryMotorMemory</modulename>
			<listenername>SensoryMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.sensorymemory.SensoryMemoryListener</listenertype>
			<modulename>SensoryMemory</modulename>
			<listenername>SensoryMotorMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.pam.PamListener</listenertype>
			<modulename>PerceptualAssociativeMemory</modulename>
			<listenername>Workspace</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.episodicmemory.CueListener</listenertype>
			<modulename>Workspace</modulename>
			<listenername>DeclarativeMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.episodicmemory.CueListener</listenertype>
			<modulename>Workspace</modulename>
			<listenername>TransientEpisodicMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.workspace.main.WorkspaceListener</listenertype>
			<modulename>Workspace</modulename>
			<listenername>PerceptualAssociativeMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.globalworkspace.BroadcastListener</listenertype>
			<modulename>GlobalWorkspace</modulename>
			<listenername>PerceptualAssociativeMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.globalworkspace.BroadcastListener</listenertype>
			<modulename>GlobalWorkspace</modulename>
			<listenername>Workspace</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.globalworkspace.BroadcastListener</listenertype>
			<modulename>GlobalWorkspace</modulename>
			<listenername>TransientEpisodicMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.globalworkspace.BroadcastListener</listenertype>
			<modulename>GlobalWorkspace</modulename>
			<listenername>ProceduralMemory</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.proceduralmemory.ProceduralMemoryListener</listenertype>
			<modulename>ProceduralMemory</modulename>
			<listenername>ActionSelection</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.actionselection.ActionSelectionListener</listenertype>
			<modulename>ActionSelection</modulename>
			<listenername>Workspace</listenername>
		</listener>
		<listener>
			<listenertype>edu.memphis.ccrg.lida.episodicmemory.LocalAssociationListener</listenertype>
			<modulename>TransientEpisodicMemory</modulename>
			<listenername>Workspace</listenername>
		</listener>
	</listeners>
</lida>