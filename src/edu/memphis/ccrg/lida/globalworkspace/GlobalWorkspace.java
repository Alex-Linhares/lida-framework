/**
 * 
 */
package edu.memphis.ccrg.lida.globalworkspace;

import edu.memphis.ccrg.lida.globalworkspace.triggers.BroadcastTrigger;

/** 
 *
 * Interface for GlobalWorkspace.
 * 
 * It receives Coalitions generated by Attention Codelets from Workspace
 * It stores them until a new broadcast is triggered
 * Different Triggers can be registered dynamically
 * Modules that receive broadcast must register implementing BroadcastListener interface
 * 
 * @author Javier Snaider
 */
public interface GlobalWorkspace {
	/**
	 * This method is invoked by the 
	 * @param coalition
	 * @return
	 */
	public boolean addCoalition(Coalition coalition);
	/**
	 * To register Triggers
	 * @param t a new Trigger
	 */
	public void addBroadcastTrigger(BroadcastTrigger t);
	/**
	 * To register a BroadcastListener. Each registered BroadcastListener receives Broadcast
	 * Implements Observer Pattern
	 * 
	 * @param bl the BroadcastListener to register
	 */
	public void addBroadcastListener(BroadcastListener bl);
	
	/**
	 * This method starts GlobalWorkspace mechanism. It should be called after registered 
	 * Triggers and BroadcastListeners.
	 */
	public void start();
	
}
